ARM GAS  /tmp/ccBENbcF.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB40:
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****   * @attention
   8:Core/Src/stm32f0xx_it.c ****   *
   9:Core/Src/stm32f0xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f0xx_it.c ****   *
  12:Core/Src/stm32f0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f0xx_it.c ****   *
  16:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f0xx_it.c ****   */
  18:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f0xx_it.c **** 
  20:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f0xx_it.c **** #include "main.h"
  22:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  23:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f0xx_it.c **** #include "ws2811.h"
  26:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f0xx_it.c **** 
  28:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f0xx_it.c **** 
  31:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f0xx_it.c **** 
ARM GAS  /tmp/ccBENbcF.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f0xx_it.c **** 
  36:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f0xx_it.c **** 
  38:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f0xx_it.c **** 
  41:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f0xx_it.c **** 
  43:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f0xx_it.c **** 
  46:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f0xx_it.c **** 
  48:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f0xx_it.c **** 
  51:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f0xx_it.c **** 
  53:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f0xx_it.c **** 
  56:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f0xx_it.c **** 
  58:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  60:Core/Src/stm32f0xx_it.c **** extern SPI_HandleTypeDef hspi1;
  61:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim2;
  62:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f0xx_it.c **** 
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /**
  70:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f0xx_it.c ****   */
  72:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f0xx_it.c **** 
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f0xx_it.c ****   while (1)
  34              		.loc 1 78 3 view .LVU1
  79:Core/Src/stm32f0xx_it.c ****   {
  80:Core/Src/stm32f0xx_it.c ****   }
  35              		.loc 1 80 3 view .LVU2
ARM GAS  /tmp/ccBENbcF.s 			page 3


  78:Core/Src/stm32f0xx_it.c ****   {
  36              		.loc 1 78 9 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE40:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB41:
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****   */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 92 3 view .LVU5
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  58              		.loc 1 96 3 view .LVU6
  92:Core/Src/stm32f0xx_it.c ****   {
  59              		.loc 1 92 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE41:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB42:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Core/Src/stm32f0xx_it.c ****   */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
ARM GAS  /tmp/ccBENbcF.s 			page 4


 103:Core/Src/stm32f0xx_it.c **** {
  73              		.loc 1 103 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
  78              		.loc 1 110 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE42:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB43:
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****   */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
  93              		.loc 1 116 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
  98              		.loc 1 123 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE43:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB44:
ARM GAS  /tmp/ccBENbcF.s 			page 5


 124:Core/Src/stm32f0xx_it.c **** 
 125:Core/Src/stm32f0xx_it.c **** /**
 126:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 127:Core/Src/stm32f0xx_it.c ****   */
 128:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 129:Core/Src/stm32f0xx_it.c **** {
 113              		.loc 1 129 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI0:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 130:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 122              		.loc 1 133 3 view .LVU13
 123 0002 FFF7FEFF 		bl	HAL_IncTick
 124              	.LVL0:
 134:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Core/Src/stm32f0xx_it.c **** 
 136:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 137:Core/Src/stm32f0xx_it.c **** }
 125              		.loc 1 137 1 is_stmt 0 view .LVU14
 126              		@ sp needed
 127 0006 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE44:
 131              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 132              		.align	1
 133              		.global	TIM2_IRQHandler
 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 138              	TIM2_IRQHandler:
 139              	.LFB45:
 138:Core/Src/stm32f0xx_it.c **** 
 139:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 140:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 141:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 142:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 143:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 144:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 145:Core/Src/stm32f0xx_it.c **** 
 146:Core/Src/stm32f0xx_it.c **** /**
 147:Core/Src/stm32f0xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 148:Core/Src/stm32f0xx_it.c ****   */
 149:Core/Src/stm32f0xx_it.c **** void TIM2_IRQHandler(void)
 150:Core/Src/stm32f0xx_it.c **** {
 140              		.loc 1 150 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccBENbcF.s 			page 6


 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 151:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 152:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 153:Core/Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 149              		.loc 1 153 3 view .LVU16
 150 0002 0248     		ldr	r0, .L9
 151 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 152              	.LVL1:
 154:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 155:Core/Src/stm32f0xx_it.c **** 
 156:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 157:Core/Src/stm32f0xx_it.c **** }
 153              		.loc 1 157 1 is_stmt 0 view .LVU17
 154              		@ sp needed
 155 0008 10BD     		pop	{r4, pc}
 156              	.L10:
 157 000a C046     		.align	2
 158              	.L9:
 159 000c 00000000 		.word	htim2
 160              		.cfi_endproc
 161              	.LFE45:
 163              		.section	.text.SPI1_IRQHandler,"ax",%progbits
 164              		.align	1
 165              		.global	SPI1_IRQHandler
 166              		.syntax unified
 167              		.code	16
 168              		.thumb_func
 170              	SPI1_IRQHandler:
 171              	.LFB46:
 158:Core/Src/stm32f0xx_it.c **** 
 159:Core/Src/stm32f0xx_it.c **** /**
 160:Core/Src/stm32f0xx_it.c ****   * @brief This function handles SPI1 global interrupt.
 161:Core/Src/stm32f0xx_it.c ****   */
 162:Core/Src/stm32f0xx_it.c **** void SPI1_IRQHandler(void)
 163:Core/Src/stm32f0xx_it.c **** {
 172              		.loc 1 163 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 164:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 0 */
 165:Core/Src/stm32f0xx_it.c **** 
 166:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SPI1_IRQn 0 */
 167:Core/Src/stm32f0xx_it.c ****   HAL_SPI_IRQHandler(&hspi1);
 181              		.loc 1 167 3 view .LVU19
 182 0002 0248     		ldr	r0, .L12
 183 0004 FFF7FEFF 		bl	HAL_SPI_IRQHandler
 184              	.LVL2:
 168:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SPI1_IRQn 1 */
 169:Core/Src/stm32f0xx_it.c **** 
ARM GAS  /tmp/ccBENbcF.s 			page 7


 170:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SPI1_IRQn 1 */
 171:Core/Src/stm32f0xx_it.c **** }
 185              		.loc 1 171 1 is_stmt 0 view .LVU20
 186              		@ sp needed
 187 0008 10BD     		pop	{r4, pc}
 188              	.L13:
 189 000a C046     		.align	2
 190              	.L12:
 191 000c 00000000 		.word	hspi1
 192              		.cfi_endproc
 193              	.LFE46:
 195              		.section	.text.USB_IRQHandler,"ax",%progbits
 196              		.align	1
 197              		.global	USB_IRQHandler
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	USB_IRQHandler:
 203              	.LFB47:
 172:Core/Src/stm32f0xx_it.c **** 
 173:Core/Src/stm32f0xx_it.c **** /**
 174:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USB global Interrupt / USB wake-up interrupt through EXTI line 18.
 175:Core/Src/stm32f0xx_it.c ****   */
 176:Core/Src/stm32f0xx_it.c **** void USB_IRQHandler(void)
 177:Core/Src/stm32f0xx_it.c **** {
 204              		.loc 1 177 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 178:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 179:Core/Src/stm32f0xx_it.c **** 
 180:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 181:Core/Src/stm32f0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 213              		.loc 1 181 3 view .LVU22
 214 0002 0248     		ldr	r0, .L15
 215 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 216              	.LVL3:
 182:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 183:Core/Src/stm32f0xx_it.c **** 
 184:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 185:Core/Src/stm32f0xx_it.c **** }
 217              		.loc 1 185 1 is_stmt 0 view .LVU23
 218              		@ sp needed
 219 0008 10BD     		pop	{r4, pc}
 220              	.L16:
 221 000a C046     		.align	2
 222              	.L15:
 223 000c 00000000 		.word	hpcd_USB_FS
 224              		.cfi_endproc
 225              	.LFE47:
 227              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 228              		.align	1
ARM GAS  /tmp/ccBENbcF.s 			page 8


 229              		.global	HAL_TIM_PeriodElapsedCallback
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 234              	HAL_TIM_PeriodElapsedCallback:
 235              	.LVL4:
 236              	.LFB48:
 186:Core/Src/stm32f0xx_it.c **** 
 187:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 1 */
 188:Core/Src/stm32f0xx_it.c **** 
 189:Core/Src/stm32f0xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 237              		.loc 1 189 61 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 189 61 is_stmt 0 view .LVU25
 242 0000 10B5     		push	{r4, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 190:Core/Src/stm32f0xx_it.c **** 	ws2811_trigger();	
 247              		.loc 1 190 2 is_stmt 1 view .LVU26
 248 0002 FFF7FEFF 		bl	ws2811_trigger
 249              	.LVL5:
 191:Core/Src/stm32f0xx_it.c **** }
 250              		.loc 1 191 1 is_stmt 0 view .LVU27
 251              		@ sp needed
 252 0006 10BD     		pop	{r4, pc}
 253              		.cfi_endproc
 254              	.LFE48:
 256              		.text
 257              	.Letext0:
 258              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 259              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 260              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 261              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 262              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 263              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usb.h"
 264              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 265              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 266              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 267              		.file 11 "Core/Inc/ws2811.h"
 268              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccBENbcF.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
     /tmp/ccBENbcF.s:19     .text.NMI_Handler:00000000 $t
     /tmp/ccBENbcF.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccBENbcF.s:42     .text.HardFault_Handler:00000000 $t
     /tmp/ccBENbcF.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccBENbcF.s:65     .text.SVC_Handler:00000000 $t
     /tmp/ccBENbcF.s:71     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccBENbcF.s:85     .text.PendSV_Handler:00000000 $t
     /tmp/ccBENbcF.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccBENbcF.s:105    .text.SysTick_Handler:00000000 $t
     /tmp/ccBENbcF.s:111    .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccBENbcF.s:132    .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccBENbcF.s:138    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccBENbcF.s:159    .text.TIM2_IRQHandler:0000000c $d
     /tmp/ccBENbcF.s:164    .text.SPI1_IRQHandler:00000000 $t
     /tmp/ccBENbcF.s:170    .text.SPI1_IRQHandler:00000000 SPI1_IRQHandler
     /tmp/ccBENbcF.s:191    .text.SPI1_IRQHandler:0000000c $d
     /tmp/ccBENbcF.s:196    .text.USB_IRQHandler:00000000 $t
     /tmp/ccBENbcF.s:202    .text.USB_IRQHandler:00000000 USB_IRQHandler
     /tmp/ccBENbcF.s:223    .text.USB_IRQHandler:0000000c $d
     /tmp/ccBENbcF.s:228    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccBENbcF.s:234    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim2
HAL_SPI_IRQHandler
hspi1
HAL_PCD_IRQHandler
hpcd_USB_FS
ws2811_trigger
