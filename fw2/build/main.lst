ARM GAS  /tmp/ccLxna6d.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB48:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "ws2811.h"
  26:Core/Src/main.c **** #include "usbd_cdc_if.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** typedef enum {
  33:Core/Src/main.c **** 	USB_CONTROL_DATA = 0x55,
ARM GAS  /tmp/ccLxna6d.s 			page 2


  34:Core/Src/main.c **** 	USB_CONTROL_ACK = 0x77
  35:Core/Src/main.c **** } usb_control_E;
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c ****  SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_SPI1_Init(void);
  61:Core/Src/main.c **** static void MX_TIM2_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** static uint8_t ack_rsp[2] ={0x48, 0x49, 0x59};
  69:Core/Src/main.c **** void usb_callback(uint8_t* buf, uint32_t* len) {
  70:Core/Src/main.c **** 	uint32_t l = *len;
  71:Core/Src/main.c **** 	if (l >= 1) {
  72:Core/Src/main.c **** 		uint8_t control = buf[0];
  73:Core/Src/main.c **** 		switch (control) {
  74:Core/Src/main.c **** 			case(USB_CONTROL_DATA): {
  75:Core/Src/main.c **** 				break;
  76:Core/Src/main.c **** 			}
  77:Core/Src/main.c **** 			case(USB_CONTROL_ACK): {
  78:Core/Src/main.c **** 				CDC_Transmit_FS(ack_rsp, sizeof(ack_rsp));
  79:Core/Src/main.c **** 				break;
  80:Core/Src/main.c **** 			}
  81:Core/Src/main.c **** 			default:
  82:Core/Src/main.c **** 				break;
  83:Core/Src/main.c **** 		}
  84:Core/Src/main.c **** 	}
  85:Core/Src/main.c **** }
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
ARM GAS  /tmp/ccLxna6d.s 			page 3


  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_SPI1_Init();
 116:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 117:Core/Src/main.c ****   MX_TIM2_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 121:Core/Src/main.c ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 122:Core/Src/main.c ****   {
 123:Core/Src/main.c ****     Error_Handler();
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   static led_code_S buff[WS2811_BUFF_LEN][NUMBER_LEDS];
 126:Core/Src/main.c ****   for(uint32_t i = 0; i < WS2811_BUFF_LEN; i++) {
 127:Core/Src/main.c **** 	for(uint32_t j = 0; j < NUMBER_LEDS;j++) {
 128:Core/Src/main.c **** 		buff[i][j].red = i == 0 ? 20 : 0;
 129:Core/Src/main.c **** 		buff[i][j].blue = 0;
 130:Core/Src/main.c **** 		buff[i][j].green = 0;
 131:Core/Src/main.c **** 	}
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c **** 	uint8_t buffer[] = "Hello, World!\r\n";
 143:Core/Src/main.c ****     ws2811_tx(buff, WS2811_BUFF_LEN);
 144:Core/Src/main.c ****     HAL_Delay(200);
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c ****   /* USER CODE END 3 */
 147:Core/Src/main.c **** }
ARM GAS  /tmp/ccLxna6d.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief System Clock Configuration
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** void SystemClock_Config(void)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 157:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 158:Core/Src/main.c ****   RCC_CRSInitTypeDef RCC_CRSInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 161:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI48;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 189:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Enable the SYSCFG APB clock
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   __HAL_RCC_CRS_CLK_ENABLE();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Configures CRS
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   RCC_CRSInitStruct.Prescaler = RCC_CRS_SYNC_DIV1;
 203:Core/Src/main.c ****   RCC_CRSInitStruct.Source = RCC_CRS_SYNC_SOURCE_USB;
 204:Core/Src/main.c ****   RCC_CRSInitStruct.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
ARM GAS  /tmp/ccLxna6d.s 			page 5


 205:Core/Src/main.c ****   RCC_CRSInitStruct.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 206:Core/Src/main.c ****   RCC_CRSInitStruct.ErrorLimitValue = 34;
 207:Core/Src/main.c ****   RCC_CRSInitStruct.HSI48CalibrationValue = 32;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   HAL_RCCEx_CRSConfig(&RCC_CRSInitStruct);
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_SPI1_Init(void)
 218:Core/Src/main.c **** {
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 227:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 228:Core/Src/main.c ****   hspi1.Instance = SPI1;
 229:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 230:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 231:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 232:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 233:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 234:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 235:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 236:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 237:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 238:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 239:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 240:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 241:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 242:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 254:Core/Src/main.c ****   * @param None
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** static void MX_TIM2_Init(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 261:Core/Src/main.c **** 
ARM GAS  /tmp/ccLxna6d.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 265:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 270:Core/Src/main.c ****   htim2.Instance = TIM2;
 271:Core/Src/main.c ****   htim2.Init.Prescaler = 999;
 272:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 273:Core/Src/main.c ****   htim2.Init.Period = 1500;
 274:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 275:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 276:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 281:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 286:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 287:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief GPIO Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_GPIO_Init(void)
 303:Core/Src/main.c **** {
  26              		.loc 1 303 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 304:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 304 3 view .LVU1
ARM GAS  /tmp/ccLxna6d.s 			page 7


  40              		.loc 1 304 20 is_stmt 0 view .LVU2
  41 0004 03AC     		add	r4, sp, #12
  42 0006 1422     		movs	r2, #20
  43 0008 0021     		movs	r1, #0
  44 000a 2000     		movs	r0, r4
  45 000c FFF7FEFF 		bl	memset
  46              	.LVL0:
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 307:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 307 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 307 3 view .LVU4
  50              		.loc 1 307 3 view .LVU5
  51 0010 124B     		ldr	r3, .L2
  52 0012 5A69     		ldr	r2, [r3, #20]
  53 0014 8021     		movs	r1, #128
  54 0016 8902     		lsls	r1, r1, #10
  55 0018 0A43     		orrs	r2, r1
  56 001a 5A61     		str	r2, [r3, #20]
  57              		.loc 1 307 3 view .LVU6
  58 001c 5A69     		ldr	r2, [r3, #20]
  59 001e 0A40     		ands	r2, r1
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 307 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 307 3 view .LVU8
 308:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 308 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 308 3 view .LVU10
  68              		.loc 1 308 3 view .LVU11
  69 0024 5A69     		ldr	r2, [r3, #20]
  70 0026 8021     		movs	r1, #128
  71 0028 C902     		lsls	r1, r1, #11
  72 002a 0A43     		orrs	r2, r1
  73 002c 5A61     		str	r2, [r3, #20]
  74              		.loc 1 308 3 view .LVU12
  75 002e 5B69     		ldr	r3, [r3, #20]
  76 0030 0B40     		ands	r3, r1
  77 0032 0293     		str	r3, [sp, #8]
  78              		.loc 1 308 3 view .LVU13
  79 0034 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 308 3 view .LVU14
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 311:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  82              		.loc 1 311 3 view .LVU15
  83 0036 0A4D     		ldr	r5, .L2+4
  84 0038 0022     		movs	r2, #0
  85 003a 4021     		movs	r1, #64
  86 003c 2800     		movs	r0, r5
  87 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL1:
 312:Core/Src/main.c **** 
ARM GAS  /tmp/ccLxna6d.s 			page 8


 313:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 314:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
  89              		.loc 1 314 3 view .LVU16
  90              		.loc 1 314 23 is_stmt 0 view .LVU17
  91 0042 4023     		movs	r3, #64
  92 0044 0393     		str	r3, [sp, #12]
 315:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 315 3 is_stmt 1 view .LVU18
  94              		.loc 1 315 24 is_stmt 0 view .LVU19
  95 0046 3F3B     		subs	r3, r3, #63
  96 0048 0493     		str	r3, [sp, #16]
 316:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 316 3 is_stmt 1 view .LVU20
  98              		.loc 1 316 24 is_stmt 0 view .LVU21
  99 004a 0023     		movs	r3, #0
 100 004c 0593     		str	r3, [sp, #20]
 317:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 101              		.loc 1 317 3 is_stmt 1 view .LVU22
 102              		.loc 1 317 25 is_stmt 0 view .LVU23
 103 004e 0693     		str	r3, [sp, #24]
 318:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 104              		.loc 1 318 3 is_stmt 1 view .LVU24
 105 0050 2100     		movs	r1, r4
 106 0052 2800     		movs	r0, r5
 107 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 108              	.LVL2:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** }
 109              		.loc 1 320 1 is_stmt 0 view .LVU25
 110 0058 09B0     		add	sp, sp, #36
 111              		@ sp needed
 112 005a 30BD     		pop	{r4, r5, pc}
 113              	.L3:
 114              		.align	2
 115              	.L2:
 116 005c 00100240 		.word	1073876992
 117 0060 00040048 		.word	1207960576
 118              		.cfi_endproc
 119              	.LFE48:
 121              		.section	.text.usb_callback,"ax",%progbits
 122              		.align	1
 123              		.global	usb_callback
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	usb_callback:
 129              	.LVL3:
 130              	.LFB43:
  69:Core/Src/main.c **** 	uint32_t l = *len;
 131              		.loc 1 69 48 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
  69:Core/Src/main.c **** 	uint32_t l = *len;
 135              		.loc 1 69 48 is_stmt 0 view .LVU27
 136 0000 10B5     		push	{r4, lr}
 137              	.LCFI2:
ARM GAS  /tmp/ccLxna6d.s 			page 9


 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 4, -8
 140              		.cfi_offset 14, -4
  70:Core/Src/main.c **** 	if (l >= 1) {
 141              		.loc 1 70 2 is_stmt 1 view .LVU28
  70:Core/Src/main.c **** 	if (l >= 1) {
 142              		.loc 1 70 11 is_stmt 0 view .LVU29
 143 0002 0B68     		ldr	r3, [r1]
 144              	.LVL4:
  71:Core/Src/main.c **** 		uint8_t control = buf[0];
 145              		.loc 1 71 2 is_stmt 1 view .LVU30
  71:Core/Src/main.c **** 		uint8_t control = buf[0];
 146              		.loc 1 71 5 is_stmt 0 view .LVU31
 147 0004 002B     		cmp	r3, #0
 148 0006 02D0     		beq	.L4
 149              	.LBB6:
  72:Core/Src/main.c **** 		switch (control) {
 150              		.loc 1 72 3 is_stmt 1 view .LVU32
  72:Core/Src/main.c **** 		switch (control) {
 151              		.loc 1 72 11 is_stmt 0 view .LVU33
 152 0008 0378     		ldrb	r3, [r0]
 153              	.LVL5:
  73:Core/Src/main.c **** 			case(USB_CONTROL_DATA): {
 154              		.loc 1 73 3 is_stmt 1 view .LVU34
 155 000a 772B     		cmp	r3, #119
 156 000c 00D0     		beq	.L6
 157              	.LVL6:
 158              	.L4:
  73:Core/Src/main.c **** 			case(USB_CONTROL_DATA): {
 159              		.loc 1 73 3 is_stmt 0 view .LVU35
 160              	.LBE6:
  85:Core/Src/main.c **** /* USER CODE END 0 */
 161              		.loc 1 85 1 view .LVU36
 162              		@ sp needed
 163 000e 10BD     		pop	{r4, pc}
 164              	.LVL7:
 165              	.L6:
 166              	.LBB7:
  78:Core/Src/main.c **** 				break;
 167              		.loc 1 78 5 is_stmt 1 view .LVU37
 168 0010 0248     		ldr	r0, .L7
 169              	.LVL8:
  78:Core/Src/main.c **** 				break;
 170              		.loc 1 78 5 is_stmt 0 view .LVU38
 171 0012 0221     		movs	r1, #2
 172              	.LVL9:
  78:Core/Src/main.c **** 				break;
 173              		.loc 1 78 5 view .LVU39
 174 0014 FFF7FEFF 		bl	CDC_Transmit_FS
 175              	.LVL10:
  79:Core/Src/main.c **** 			}
 176              		.loc 1 79 5 is_stmt 1 view .LVU40
 177              	.LBE7:
  85:Core/Src/main.c **** /* USER CODE END 0 */
 178              		.loc 1 85 1 is_stmt 0 view .LVU41
 179 0018 F9E7     		b	.L4
 180              	.L8:
ARM GAS  /tmp/ccLxna6d.s 			page 10


 181 001a C046     		.align	2
 182              	.L7:
 183 001c 00000000 		.word	ack_rsp
 184              		.cfi_endproc
 185              	.LFE43:
 187              		.section	.text.Error_Handler,"ax",%progbits
 188              		.align	1
 189              		.global	Error_Handler
 190              		.syntax unified
 191              		.code	16
 192              		.thumb_func
 194              	Error_Handler:
 195              	.LFB49:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /* USER CODE END 4 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /**
 327:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** void Error_Handler(void)
 331:Core/Src/main.c **** {
 196              		.loc 1 331 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ Volatile: function does not return.
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 332:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 333:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 334:Core/Src/main.c ****   __disable_irq();
 202              		.loc 1 334 3 view .LVU43
 203              	.LBB8:
 204              	.LBI8:
 205              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccLxna6d.s 			page 11


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccLxna6d.s 			page 12


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccLxna6d.s 			page 13


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 206              		.loc 2 140 27 view .LVU44
 207              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 208              		.loc 2 142 3 view .LVU45
 209              		.syntax divided
 210              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 211 0000 72B6     		cpsid i
 212              	@ 0 "" 2
 213              		.thumb
 214              		.syntax unified
 215              	.L10:
 216              	.LBE9:
 217              	.LBE8:
 335:Core/Src/main.c ****   while (1)
 218              		.loc 1 335 3 view .LVU46
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****   }
 219              		.loc 1 337 3 view .LVU47
 335:Core/Src/main.c ****   while (1)
 220              		.loc 1 335 9 view .LVU48
 221 0002 FEE7     		b	.L10
 222              		.cfi_endproc
 223              	.LFE49:
 225              		.section	.text.MX_SPI1_Init,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.code	16
 229              		.thumb_func
 231              	MX_SPI1_Init:
 232              	.LFB46:
 218:Core/Src/main.c **** 
 233              		.loc 1 218 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 228:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 242              		.loc 1 228 3 view .LVU50
 228:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 243              		.loc 1 228 18 is_stmt 0 view .LVU51
 244 0002 1148     		ldr	r0, .L14
 245 0004 114B     		ldr	r3, .L14+4
 246 0006 0360     		str	r3, [r0]
 229:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 247              		.loc 1 229 3 is_stmt 1 view .LVU52
 229:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  /tmp/ccLxna6d.s 			page 14


 248              		.loc 1 229 19 is_stmt 0 view .LVU53
 249 0008 8223     		movs	r3, #130
 250 000a 5B00     		lsls	r3, r3, #1
 251 000c 4360     		str	r3, [r0, #4]
 230:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 252              		.loc 1 230 3 is_stmt 1 view .LVU54
 230:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 253              		.loc 1 230 24 is_stmt 0 view .LVU55
 254 000e 0023     		movs	r3, #0
 255 0010 8360     		str	r3, [r0, #8]
 231:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 256              		.loc 1 231 3 is_stmt 1 view .LVU56
 231:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 257              		.loc 1 231 23 is_stmt 0 view .LVU57
 258 0012 E022     		movs	r2, #224
 259 0014 D200     		lsls	r2, r2, #3
 260 0016 C260     		str	r2, [r0, #12]
 232:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 261              		.loc 1 232 3 is_stmt 1 view .LVU58
 232:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 262              		.loc 1 232 26 is_stmt 0 view .LVU59
 263 0018 0361     		str	r3, [r0, #16]
 233:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 264              		.loc 1 233 3 is_stmt 1 view .LVU60
 233:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 265              		.loc 1 233 23 is_stmt 0 view .LVU61
 266 001a 4361     		str	r3, [r0, #20]
 234:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 267              		.loc 1 234 3 is_stmt 1 view .LVU62
 234:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 268              		.loc 1 234 18 is_stmt 0 view .LVU63
 269 001c 8022     		movs	r2, #128
 270 001e 9200     		lsls	r2, r2, #2
 271 0020 8261     		str	r2, [r0, #24]
 235:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 272              		.loc 1 235 3 is_stmt 1 view .LVU64
 235:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 273              		.loc 1 235 32 is_stmt 0 view .LVU65
 274 0022 E93A     		subs	r2, r2, #233
 275 0024 FF3A     		subs	r2, r2, #255
 276 0026 C261     		str	r2, [r0, #28]
 236:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 277              		.loc 1 236 3 is_stmt 1 view .LVU66
 236:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 278              		.loc 1 236 23 is_stmt 0 view .LVU67
 279 0028 0362     		str	r3, [r0, #32]
 237:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 280              		.loc 1 237 3 is_stmt 1 view .LVU68
 237:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 281              		.loc 1 237 21 is_stmt 0 view .LVU69
 282 002a 4362     		str	r3, [r0, #36]
 238:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 283              		.loc 1 238 3 is_stmt 1 view .LVU70
 238:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 284              		.loc 1 238 29 is_stmt 0 view .LVU71
 285 002c 8362     		str	r3, [r0, #40]
 239:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
ARM GAS  /tmp/ccLxna6d.s 			page 15


 286              		.loc 1 239 3 is_stmt 1 view .LVU72
 239:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 287              		.loc 1 239 28 is_stmt 0 view .LVU73
 288 002e 113A     		subs	r2, r2, #17
 289 0030 C262     		str	r2, [r0, #44]
 240:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 290              		.loc 1 240 3 is_stmt 1 view .LVU74
 240:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 291              		.loc 1 240 24 is_stmt 0 view .LVU75
 292 0032 0363     		str	r3, [r0, #48]
 241:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 293              		.loc 1 241 3 is_stmt 1 view .LVU76
 241:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 294              		.loc 1 241 23 is_stmt 0 view .LVU77
 295 0034 0833     		adds	r3, r3, #8
 296 0036 4363     		str	r3, [r0, #52]
 242:Core/Src/main.c ****   {
 297              		.loc 1 242 3 is_stmt 1 view .LVU78
 242:Core/Src/main.c ****   {
 298              		.loc 1 242 7 is_stmt 0 view .LVU79
 299 0038 FFF7FEFF 		bl	HAL_SPI_Init
 300              	.LVL11:
 242:Core/Src/main.c ****   {
 301              		.loc 1 242 6 discriminator 1 view .LVU80
 302 003c 0028     		cmp	r0, #0
 303 003e 00D1     		bne	.L13
 250:Core/Src/main.c **** 
 304              		.loc 1 250 1 view .LVU81
 305              		@ sp needed
 306 0040 10BD     		pop	{r4, pc}
 307              	.L13:
 244:Core/Src/main.c ****   }
 308              		.loc 1 244 5 is_stmt 1 view .LVU82
 309 0042 FFF7FEFF 		bl	Error_Handler
 310              	.LVL12:
 311              	.L15:
 312 0046 C046     		.align	2
 313              	.L14:
 314 0048 00000000 		.word	hspi1
 315 004c 00300140 		.word	1073819648
 316              		.cfi_endproc
 317              	.LFE46:
 319              		.section	.text.MX_TIM2_Init,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.code	16
 323              		.thumb_func
 325              	MX_TIM2_Init:
 326              	.LFB47:
 258:Core/Src/main.c **** 
 327              		.loc 1 258 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 24
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 00B5     		push	{lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccLxna6d.s 			page 16


 334              		.cfi_offset 14, -4
 335 0002 87B0     		sub	sp, sp, #28
 336              	.LCFI5:
 337              		.cfi_def_cfa_offset 32
 264:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 338              		.loc 1 264 3 view .LVU84
 264:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 339              		.loc 1 264 26 is_stmt 0 view .LVU85
 340 0004 1022     		movs	r2, #16
 341 0006 0021     		movs	r1, #0
 342 0008 02A8     		add	r0, sp, #8
 343 000a FFF7FEFF 		bl	memset
 344              	.LVL13:
 265:Core/Src/main.c **** 
 345              		.loc 1 265 3 is_stmt 1 view .LVU86
 265:Core/Src/main.c **** 
 346              		.loc 1 265 27 is_stmt 0 view .LVU87
 347 000e 0822     		movs	r2, #8
 348 0010 0021     		movs	r1, #0
 349 0012 6846     		mov	r0, sp
 350 0014 FFF7FEFF 		bl	memset
 351              	.LVL14:
 270:Core/Src/main.c ****   htim2.Init.Prescaler = 999;
 352              		.loc 1 270 3 is_stmt 1 view .LVU88
 270:Core/Src/main.c ****   htim2.Init.Prescaler = 999;
 353              		.loc 1 270 18 is_stmt 0 view .LVU89
 354 0018 1448     		ldr	r0, .L23
 355 001a 8023     		movs	r3, #128
 356 001c DB05     		lsls	r3, r3, #23
 357 001e 0360     		str	r3, [r0]
 271:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 358              		.loc 1 271 3 is_stmt 1 view .LVU90
 271:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 359              		.loc 1 271 24 is_stmt 0 view .LVU91
 360 0020 134B     		ldr	r3, .L23+4
 361 0022 4360     		str	r3, [r0, #4]
 272:Core/Src/main.c ****   htim2.Init.Period = 1500;
 362              		.loc 1 272 3 is_stmt 1 view .LVU92
 272:Core/Src/main.c ****   htim2.Init.Period = 1500;
 363              		.loc 1 272 26 is_stmt 0 view .LVU93
 364 0024 0023     		movs	r3, #0
 365 0026 8360     		str	r3, [r0, #8]
 273:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 366              		.loc 1 273 3 is_stmt 1 view .LVU94
 273:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 367              		.loc 1 273 21 is_stmt 0 view .LVU95
 368 0028 124A     		ldr	r2, .L23+8
 369 002a C260     		str	r2, [r0, #12]
 274:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 370              		.loc 1 274 3 is_stmt 1 view .LVU96
 274:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 371              		.loc 1 274 28 is_stmt 0 view .LVU97
 372 002c 0361     		str	r3, [r0, #16]
 275:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 373              		.loc 1 275 3 is_stmt 1 view .LVU98
 275:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 374              		.loc 1 275 32 is_stmt 0 view .LVU99
ARM GAS  /tmp/ccLxna6d.s 			page 17


 375 002e 8361     		str	r3, [r0, #24]
 276:Core/Src/main.c ****   {
 376              		.loc 1 276 3 is_stmt 1 view .LVU100
 276:Core/Src/main.c ****   {
 377              		.loc 1 276 7 is_stmt 0 view .LVU101
 378 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 379              	.LVL15:
 276:Core/Src/main.c ****   {
 380              		.loc 1 276 6 discriminator 1 view .LVU102
 381 0034 0028     		cmp	r0, #0
 382 0036 13D1     		bne	.L20
 280:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 383              		.loc 1 280 3 is_stmt 1 view .LVU103
 280:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 384              		.loc 1 280 34 is_stmt 0 view .LVU104
 385 0038 8023     		movs	r3, #128
 386 003a 5B01     		lsls	r3, r3, #5
 387 003c 0293     		str	r3, [sp, #8]
 281:Core/Src/main.c ****   {
 388              		.loc 1 281 3 is_stmt 1 view .LVU105
 281:Core/Src/main.c ****   {
 389              		.loc 1 281 7 is_stmt 0 view .LVU106
 390 003e 0B48     		ldr	r0, .L23
 391 0040 02A9     		add	r1, sp, #8
 392 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 393              	.LVL16:
 281:Core/Src/main.c ****   {
 394              		.loc 1 281 6 discriminator 1 view .LVU107
 395 0046 0028     		cmp	r0, #0
 396 0048 0CD1     		bne	.L21
 285:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 397              		.loc 1 285 3 is_stmt 1 view .LVU108
 285:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 398              		.loc 1 285 37 is_stmt 0 view .LVU109
 399 004a 6946     		mov	r1, sp
 400 004c 0023     		movs	r3, #0
 401 004e 0093     		str	r3, [sp]
 286:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 402              		.loc 1 286 3 is_stmt 1 view .LVU110
 286:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 403              		.loc 1 286 33 is_stmt 0 view .LVU111
 404 0050 0193     		str	r3, [sp, #4]
 287:Core/Src/main.c ****   {
 405              		.loc 1 287 3 is_stmt 1 view .LVU112
 287:Core/Src/main.c ****   {
 406              		.loc 1 287 7 is_stmt 0 view .LVU113
 407 0052 0648     		ldr	r0, .L23
 408 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 409              	.LVL17:
 287:Core/Src/main.c ****   {
 410              		.loc 1 287 6 discriminator 1 view .LVU114
 411 0058 0028     		cmp	r0, #0
 412 005a 05D1     		bne	.L22
 295:Core/Src/main.c **** 
 413              		.loc 1 295 1 view .LVU115
 414 005c 07B0     		add	sp, sp, #28
 415              		@ sp needed
ARM GAS  /tmp/ccLxna6d.s 			page 18


 416 005e 00BD     		pop	{pc}
 417              	.L20:
 278:Core/Src/main.c ****   }
 418              		.loc 1 278 5 is_stmt 1 view .LVU116
 419 0060 FFF7FEFF 		bl	Error_Handler
 420              	.LVL18:
 421              	.L21:
 283:Core/Src/main.c ****   }
 422              		.loc 1 283 5 view .LVU117
 423 0064 FFF7FEFF 		bl	Error_Handler
 424              	.LVL19:
 425              	.L22:
 289:Core/Src/main.c ****   }
 426              		.loc 1 289 5 view .LVU118
 427 0068 FFF7FEFF 		bl	Error_Handler
 428              	.LVL20:
 429              	.L24:
 430              		.align	2
 431              	.L23:
 432 006c 00000000 		.word	htim2
 433 0070 E7030000 		.word	999
 434 0074 DC050000 		.word	1500
 435              		.cfi_endproc
 436              	.LFE47:
 438              		.section	.text.SystemClock_Config,"ax",%progbits
 439              		.align	1
 440              		.global	SystemClock_Config
 441              		.syntax unified
 442              		.code	16
 443              		.thumb_func
 445              	SystemClock_Config:
 446              	.LFB45:
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 447              		.loc 1 154 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 120
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 10B5     		push	{r4, lr}
 452              	.LCFI6:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 4, -8
 455              		.cfi_offset 14, -4
 456 0002 9EB0     		sub	sp, sp, #120
 457              	.LCFI7:
 458              		.cfi_def_cfa_offset 128
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 459              		.loc 1 155 3 view .LVU120
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 460              		.loc 1 155 22 is_stmt 0 view .LVU121
 461 0004 11AC     		add	r4, sp, #68
 462 0006 3422     		movs	r2, #52
 463 0008 0021     		movs	r1, #0
 464 000a 2000     		movs	r0, r4
 465 000c FFF7FEFF 		bl	memset
 466              	.LVL21:
 156:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 467              		.loc 1 156 3 is_stmt 1 view .LVU122
ARM GAS  /tmp/ccLxna6d.s 			page 19


 156:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 468              		.loc 1 156 22 is_stmt 0 view .LVU123
 469 0010 1022     		movs	r2, #16
 470 0012 0021     		movs	r1, #0
 471 0014 0DA8     		add	r0, sp, #52
 472 0016 FFF7FEFF 		bl	memset
 473              	.LVL22:
 157:Core/Src/main.c ****   RCC_CRSInitTypeDef RCC_CRSInitStruct = {0};
 474              		.loc 1 157 3 is_stmt 1 view .LVU124
 157:Core/Src/main.c ****   RCC_CRSInitTypeDef RCC_CRSInitStruct = {0};
 475              		.loc 1 157 28 is_stmt 0 view .LVU125
 476 001a 1822     		movs	r2, #24
 477 001c 0021     		movs	r1, #0
 478 001e 07A8     		add	r0, sp, #28
 479 0020 FFF7FEFF 		bl	memset
 480              	.LVL23:
 158:Core/Src/main.c **** 
 481              		.loc 1 158 3 is_stmt 1 view .LVU126
 158:Core/Src/main.c **** 
 482              		.loc 1 158 22 is_stmt 0 view .LVU127
 483 0024 1822     		movs	r2, #24
 484 0026 0021     		movs	r1, #0
 485 0028 01A8     		add	r0, sp, #4
 486 002a FFF7FEFF 		bl	memset
 487              	.LVL24:
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 488              		.loc 1 163 3 is_stmt 1 view .LVU128
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 489              		.loc 1 163 36 is_stmt 0 view .LVU129
 490 002e 2223     		movs	r3, #34
 491 0030 1193     		str	r3, [sp, #68]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 492              		.loc 1 164 3 is_stmt 1 view .LVU130
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 493              		.loc 1 164 30 is_stmt 0 view .LVU131
 494 0032 213B     		subs	r3, r3, #33
 495 0034 1493     		str	r3, [sp, #80]
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 496              		.loc 1 165 3 is_stmt 1 view .LVU132
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 497              		.loc 1 165 32 is_stmt 0 view .LVU133
 498 0036 1993     		str	r3, [sp, #100]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 499              		.loc 1 166 3 is_stmt 1 view .LVU134
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 500              		.loc 1 166 41 is_stmt 0 view .LVU135
 501 0038 1022     		movs	r2, #16
 502 003a 1592     		str	r2, [sp, #84]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 503              		.loc 1 167 3 is_stmt 1 view .LVU136
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 504              		.loc 1 167 34 is_stmt 0 view .LVU137
 505 003c 0E3A     		subs	r2, r2, #14
 506 003e 1A92     		str	r2, [sp, #104]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 507              		.loc 1 168 3 is_stmt 1 view .LVU138
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
ARM GAS  /tmp/ccLxna6d.s 			page 20


 508              		.loc 1 168 35 is_stmt 0 view .LVU139
 509 0040 8022     		movs	r2, #128
 510 0042 1202     		lsls	r2, r2, #8
 511 0044 1B92     		str	r2, [sp, #108]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 512              		.loc 1 169 3 is_stmt 1 view .LVU140
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV2;
 513              		.loc 1 169 32 is_stmt 0 view .LVU141
 514 0046 A022     		movs	r2, #160
 515 0048 9203     		lsls	r2, r2, #14
 516 004a 1C92     		str	r2, [sp, #112]
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 517              		.loc 1 170 3 is_stmt 1 view .LVU142
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 518              		.loc 1 170 32 is_stmt 0 view .LVU143
 519 004c 1D93     		str	r3, [sp, #116]
 171:Core/Src/main.c ****   {
 520              		.loc 1 171 3 is_stmt 1 view .LVU144
 171:Core/Src/main.c ****   {
 521              		.loc 1 171 7 is_stmt 0 view .LVU145
 522 004e 2000     		movs	r0, r4
 523 0050 FFF7FEFF 		bl	HAL_RCC_OscConfig
 524              	.LVL25:
 171:Core/Src/main.c ****   {
 525              		.loc 1 171 6 discriminator 1 view .LVU146
 526 0054 0028     		cmp	r0, #0
 527 0056 31D1     		bne	.L29
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 528              		.loc 1 178 3 is_stmt 1 view .LVU147
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 529              		.loc 1 178 31 is_stmt 0 view .LVU148
 530 0058 0DA8     		add	r0, sp, #52
 531 005a 0723     		movs	r3, #7
 532 005c 0D93     		str	r3, [sp, #52]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 533              		.loc 1 180 3 is_stmt 1 view .LVU149
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 534              		.loc 1 180 34 is_stmt 0 view .LVU150
 535 005e 053B     		subs	r3, r3, #5
 536 0060 4360     		str	r3, [r0, #4]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 537              		.loc 1 181 3 is_stmt 1 view .LVU151
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 538              		.loc 1 181 35 is_stmt 0 view .LVU152
 539 0062 0023     		movs	r3, #0
 540 0064 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c **** 
 541              		.loc 1 182 3 is_stmt 1 view .LVU153
 182:Core/Src/main.c **** 
 542              		.loc 1 182 36 is_stmt 0 view .LVU154
 543 0066 C360     		str	r3, [r0, #12]
 184:Core/Src/main.c ****   {
 544              		.loc 1 184 3 is_stmt 1 view .LVU155
 184:Core/Src/main.c ****   {
 545              		.loc 1 184 7 is_stmt 0 view .LVU156
 546 0068 0121     		movs	r1, #1
 547 006a FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccLxna6d.s 			page 21


 548              	.LVL26:
 184:Core/Src/main.c ****   {
 549              		.loc 1 184 6 discriminator 1 view .LVU157
 550 006e 0028     		cmp	r0, #0
 551 0070 26D1     		bne	.L30
 188:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 552              		.loc 1 188 3 is_stmt 1 view .LVU158
 188:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 553              		.loc 1 188 38 is_stmt 0 view .LVU159
 554 0072 07A8     		add	r0, sp, #28
 555 0074 8023     		movs	r3, #128
 556 0076 9B02     		lsls	r3, r3, #10
 557 0078 0793     		str	r3, [sp, #28]
 189:Core/Src/main.c **** 
 558              		.loc 1 189 3 is_stmt 1 view .LVU160
 189:Core/Src/main.c **** 
 559              		.loc 1 189 35 is_stmt 0 view .LVU161
 560 007a 0023     		movs	r3, #0
 561 007c 4361     		str	r3, [r0, #20]
 191:Core/Src/main.c ****   {
 562              		.loc 1 191 3 is_stmt 1 view .LVU162
 191:Core/Src/main.c ****   {
 563              		.loc 1 191 7 is_stmt 0 view .LVU163
 564 007e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 565              	.LVL27:
 191:Core/Src/main.c ****   {
 566              		.loc 1 191 6 discriminator 1 view .LVU164
 567 0082 0028     		cmp	r0, #0
 568 0084 1ED1     		bne	.L31
 198:Core/Src/main.c **** 
 569              		.loc 1 198 3 is_stmt 1 view .LVU165
 570              	.LBB10:
 198:Core/Src/main.c **** 
 571              		.loc 1 198 3 view .LVU166
 198:Core/Src/main.c **** 
 572              		.loc 1 198 3 view .LVU167
 573 0086 104B     		ldr	r3, .L32
 574 0088 DA69     		ldr	r2, [r3, #28]
 575 008a 8021     		movs	r1, #128
 576 008c 0905     		lsls	r1, r1, #20
 577 008e 0A43     		orrs	r2, r1
 578 0090 DA61     		str	r2, [r3, #28]
 198:Core/Src/main.c **** 
 579              		.loc 1 198 3 view .LVU168
 580 0092 DB69     		ldr	r3, [r3, #28]
 581 0094 0B40     		ands	r3, r1
 582 0096 0093     		str	r3, [sp]
 198:Core/Src/main.c **** 
 583              		.loc 1 198 3 view .LVU169
 584 0098 009B     		ldr	r3, [sp]
 585              	.LBE10:
 198:Core/Src/main.c **** 
 586              		.loc 1 198 3 view .LVU170
 202:Core/Src/main.c ****   RCC_CRSInitStruct.Source = RCC_CRS_SYNC_SOURCE_USB;
 587              		.loc 1 202 3 view .LVU171
 202:Core/Src/main.c ****   RCC_CRSInitStruct.Source = RCC_CRS_SYNC_SOURCE_USB;
 588              		.loc 1 202 31 is_stmt 0 view .LVU172
ARM GAS  /tmp/ccLxna6d.s 			page 22


 589 009a 01A8     		add	r0, sp, #4
 590 009c 0023     		movs	r3, #0
 591 009e 0193     		str	r3, [sp, #4]
 203:Core/Src/main.c ****   RCC_CRSInitStruct.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
 592              		.loc 1 203 3 is_stmt 1 view .LVU173
 203:Core/Src/main.c ****   RCC_CRSInitStruct.Polarity = RCC_CRS_SYNC_POLARITY_RISING;
 593              		.loc 1 203 28 is_stmt 0 view .LVU174
 594 00a0 8022     		movs	r2, #128
 595 00a2 9205     		lsls	r2, r2, #22
 596 00a4 4260     		str	r2, [r0, #4]
 204:Core/Src/main.c ****   RCC_CRSInitStruct.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 597              		.loc 1 204 3 is_stmt 1 view .LVU175
 204:Core/Src/main.c ****   RCC_CRSInitStruct.ReloadValue = __HAL_RCC_CRS_RELOADVALUE_CALCULATE(48000000,1000);
 598              		.loc 1 204 30 is_stmt 0 view .LVU176
 599 00a6 8360     		str	r3, [r0, #8]
 205:Core/Src/main.c ****   RCC_CRSInitStruct.ErrorLimitValue = 34;
 600              		.loc 1 205 3 is_stmt 1 view .LVU177
 205:Core/Src/main.c ****   RCC_CRSInitStruct.ErrorLimitValue = 34;
 601              		.loc 1 205 33 is_stmt 0 view .LVU178
 602 00a8 084B     		ldr	r3, .L32+4
 603 00aa C360     		str	r3, [r0, #12]
 206:Core/Src/main.c ****   RCC_CRSInitStruct.HSI48CalibrationValue = 32;
 604              		.loc 1 206 3 is_stmt 1 view .LVU179
 206:Core/Src/main.c ****   RCC_CRSInitStruct.HSI48CalibrationValue = 32;
 605              		.loc 1 206 37 is_stmt 0 view .LVU180
 606 00ac 2223     		movs	r3, #34
 607 00ae 0361     		str	r3, [r0, #16]
 207:Core/Src/main.c **** 
 608              		.loc 1 207 3 is_stmt 1 view .LVU181
 207:Core/Src/main.c **** 
 609              		.loc 1 207 43 is_stmt 0 view .LVU182
 610 00b0 023B     		subs	r3, r3, #2
 611 00b2 4361     		str	r3, [r0, #20]
 209:Core/Src/main.c **** }
 612              		.loc 1 209 3 is_stmt 1 view .LVU183
 613 00b4 FFF7FEFF 		bl	HAL_RCCEx_CRSConfig
 614              	.LVL28:
 210:Core/Src/main.c **** 
 615              		.loc 1 210 1 is_stmt 0 view .LVU184
 616 00b8 1EB0     		add	sp, sp, #120
 617              		@ sp needed
 618 00ba 10BD     		pop	{r4, pc}
 619              	.L29:
 173:Core/Src/main.c ****   }
 620              		.loc 1 173 5 is_stmt 1 view .LVU185
 621 00bc FFF7FEFF 		bl	Error_Handler
 622              	.LVL29:
 623              	.L30:
 186:Core/Src/main.c ****   }
 624              		.loc 1 186 5 view .LVU186
 625 00c0 FFF7FEFF 		bl	Error_Handler
 626              	.LVL30:
 627              	.L31:
 193:Core/Src/main.c ****   }
 628              		.loc 1 193 5 view .LVU187
 629 00c4 FFF7FEFF 		bl	Error_Handler
 630              	.LVL31:
ARM GAS  /tmp/ccLxna6d.s 			page 23


 631              	.L33:
 632              		.align	2
 633              	.L32:
 634 00c8 00100240 		.word	1073876992
 635 00cc 7FBB0000 		.word	47999
 636              		.cfi_endproc
 637              	.LFE45:
 639              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 640              		.align	2
 641              	.LC5:
 642 0000 48656C6C 		.ascii	"Hello, World!\015\012\000"
 642      6F2C2057 
 642      6F726C64 
 642      210D0A00 
 643              		.section	.text.main,"ax",%progbits
 644              		.align	1
 645              		.global	main
 646              		.syntax unified
 647              		.code	16
 648              		.thumb_func
 650              	main:
 651              	.LFB44:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 652              		.loc 1 93 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656 0000 70B5     		push	{r4, r5, r6, lr}
 657              	.LCFI8:
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 4, -16
 660              		.cfi_offset 5, -12
 661              		.cfi_offset 6, -8
 662              		.cfi_offset 14, -4
 663 0002 84B0     		sub	sp, sp, #16
 664              	.LCFI9:
 665              		.cfi_def_cfa_offset 32
 100:Core/Src/main.c **** 
 666              		.loc 1 100 3 view .LVU189
 667 0004 FFF7FEFF 		bl	HAL_Init
 668              	.LVL32:
 107:Core/Src/main.c **** 
 669              		.loc 1 107 3 view .LVU190
 670 0008 FFF7FEFF 		bl	SystemClock_Config
 671              	.LVL33:
 114:Core/Src/main.c ****   MX_SPI1_Init();
 672              		.loc 1 114 3 view .LVU191
 673 000c FFF7FEFF 		bl	MX_GPIO_Init
 674              	.LVL34:
 115:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 675              		.loc 1 115 3 view .LVU192
 676 0010 FFF7FEFF 		bl	MX_SPI1_Init
 677              	.LVL35:
 116:Core/Src/main.c ****   MX_TIM2_Init();
 678              		.loc 1 116 3 view .LVU193
 679 0014 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 680              	.LVL36:
ARM GAS  /tmp/ccLxna6d.s 			page 24


 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 681              		.loc 1 117 3 view .LVU194
 682 0018 FFF7FEFF 		bl	MX_TIM2_Init
 683              	.LVL37:
 120:Core/Src/main.c ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 684              		.loc 1 120 1 view .LVU195
 685 001c 0122     		movs	r2, #1
 686 001e 4021     		movs	r1, #64
 687 0020 1848     		ldr	r0, .L46
 688 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689              	.LVL38:
 121:Core/Src/main.c ****   {
 690              		.loc 1 121 3 view .LVU196
 121:Core/Src/main.c ****   {
 691              		.loc 1 121 7 is_stmt 0 view .LVU197
 692 0026 1848     		ldr	r0, .L46+4
 693 0028 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 694              	.LVL39:
 121:Core/Src/main.c ****   {
 695              		.loc 1 121 6 discriminator 1 view .LVU198
 696 002c 0028     		cmp	r0, #0
 697 002e 01D1     		bne	.L43
 698              	.LBB11:
 126:Core/Src/main.c **** 	for(uint32_t j = 0; j < NUMBER_LEDS;j++) {
 699              		.loc 1 126 16 view .LVU199
 700 0030 0025     		movs	r5, #0
 701 0032 15E0     		b	.L35
 702              	.L43:
 703              	.LBE11:
 123:Core/Src/main.c ****   }
 704              		.loc 1 123 5 is_stmt 1 view .LVU200
 705 0034 FFF7FEFF 		bl	Error_Handler
 706              	.LVL40:
 707              	.L45:
 708              	.LBB14:
 709              	.LBB12:
 128:Core/Src/main.c **** 		buff[i][j].blue = 0;
 710              		.loc 1 128 18 is_stmt 0 discriminator 1 view .LVU201
 711 0038 1426     		movs	r6, #20
 712              	.L36:
 128:Core/Src/main.c **** 		buff[i][j].blue = 0;
 713              		.loc 1 128 18 discriminator 4 view .LVU202
 714 003a 144B     		ldr	r3, .L46+8
 715 003c 4A00     		lsls	r2, r1, #1
 716 003e 5218     		adds	r2, r2, r1
 717 0040 6C24     		movs	r4, #108
 718 0042 6C43     		muls	r4, r5
 719 0044 1219     		adds	r2, r2, r4
 720 0046 D654     		strb	r6, [r2, r3]
 129:Core/Src/main.c **** 		buff[i][j].green = 0;
 721              		.loc 1 129 3 is_stmt 1 view .LVU203
 129:Core/Src/main.c **** 		buff[i][j].green = 0;
 722              		.loc 1 129 19 is_stmt 0 view .LVU204
 723 0048 9B18     		adds	r3, r3, r2
 724 004a 0022     		movs	r2, #0
 725 004c 9A70     		strb	r2, [r3, #2]
 130:Core/Src/main.c **** 	}
ARM GAS  /tmp/ccLxna6d.s 			page 25


 726              		.loc 1 130 3 is_stmt 1 view .LVU205
 130:Core/Src/main.c **** 	}
 727              		.loc 1 130 20 is_stmt 0 view .LVU206
 728 004e 5A70     		strb	r2, [r3, #1]
 127:Core/Src/main.c **** 		buff[i][j].red = i == 0 ? 20 : 0;
 729              		.loc 1 127 39 is_stmt 1 discriminator 2 view .LVU207
 730 0050 0131     		adds	r1, r1, #1
 731              	.LVL41:
 732              	.L38:
 127:Core/Src/main.c **** 		buff[i][j].red = i == 0 ? 20 : 0;
 733              		.loc 1 127 24 discriminator 1 view .LVU208
 734 0052 2329     		cmp	r1, #35
 735 0054 03D8     		bhi	.L44
 128:Core/Src/main.c **** 		buff[i][j].blue = 0;
 736              		.loc 1 128 3 view .LVU209
 128:Core/Src/main.c **** 		buff[i][j].blue = 0;
 737              		.loc 1 128 18 is_stmt 0 view .LVU210
 738 0056 002D     		cmp	r5, #0
 739 0058 EED0     		beq	.L45
 128:Core/Src/main.c **** 		buff[i][j].blue = 0;
 740              		.loc 1 128 18 discriminator 2 view .LVU211
 741 005a 0600     		movs	r6, r0
 742 005c EDE7     		b	.L36
 743              	.L44:
 744              	.LBE12:
 126:Core/Src/main.c **** 	for(uint32_t j = 0; j < NUMBER_LEDS;j++) {
 745              		.loc 1 126 45 is_stmt 1 discriminator 2 view .LVU212
 746 005e 0135     		adds	r5, r5, #1
 747              	.LVL42:
 748              	.L35:
 126:Core/Src/main.c **** 	for(uint32_t j = 0; j < NUMBER_LEDS;j++) {
 749              		.loc 1 126 25 discriminator 1 view .LVU213
 750 0060 012D     		cmp	r5, #1
 751 0062 01D8     		bhi	.L39
 752              	.LBB13:
 127:Core/Src/main.c **** 		buff[i][j].red = i == 0 ? 20 : 0;
 753              		.loc 1 127 15 is_stmt 0 view .LVU214
 754 0064 0021     		movs	r1, #0
 755 0066 F4E7     		b	.L38
 756              	.LVL43:
 757              	.L39:
 127:Core/Src/main.c **** 		buff[i][j].red = i == 0 ? 20 : 0;
 758              		.loc 1 127 15 view .LVU215
 759              	.LBE13:
 760              	.LBE14:
 137:Core/Src/main.c ****   {
 761              		.loc 1 137 3 is_stmt 1 view .LVU216
 762              	.LBB15:
 142:Core/Src/main.c ****     ws2811_tx(buff, WS2811_BUFF_LEN);
 763              		.loc 1 142 2 view .LVU217
 142:Core/Src/main.c ****     ws2811_tx(buff, WS2811_BUFF_LEN);
 764              		.loc 1 142 10 is_stmt 0 view .LVU218
 765 0068 6A46     		mov	r2, sp
 766 006a 094B     		ldr	r3, .L46+12
 767 006c 31CB     		ldmia	r3!, {r0, r4, r5}
 768 006e 31C2     		stmia	r2!, {r0, r4, r5}
 769 0070 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccLxna6d.s 			page 26


 770 0072 1360     		str	r3, [r2]
 143:Core/Src/main.c ****     HAL_Delay(200);
 771              		.loc 1 143 5 is_stmt 1 view .LVU219
 772 0074 0548     		ldr	r0, .L46+8
 773 0076 0221     		movs	r1, #2
 774 0078 FFF7FEFF 		bl	ws2811_tx
 775              	.LVL44:
 144:Core/Src/main.c ****   }
 776              		.loc 1 144 5 view .LVU220
 777 007c C820     		movs	r0, #200
 778 007e FFF7FEFF 		bl	HAL_Delay
 779              	.LVL45:
 780              	.LBE15:
 137:Core/Src/main.c ****   {
 781              		.loc 1 137 9 view .LVU221
 782 0082 F1E7     		b	.L39
 783              	.L47:
 784              		.align	2
 785              	.L46:
 786 0084 00040048 		.word	1207960576
 787 0088 00000000 		.word	htim2
 788 008c 00000000 		.word	buff.0
 789 0090 00000000 		.word	.LC5
 790              		.cfi_endproc
 791              	.LFE44:
 793              		.section	.bss.buff.0,"aw",%nobits
 794              		.align	2
 797              	buff.0:
 798 0000 00000000 		.space	216
 798      00000000 
 798      00000000 
 798      00000000 
 798      00000000 
 799              		.section	.data.ack_rsp,"aw"
 800              		.align	2
 803              	ack_rsp:
 804 0000 4849     		.ascii	"HI"
 805              		.global	htim2
 806              		.section	.bss.htim2,"aw",%nobits
 807              		.align	2
 810              	htim2:
 811 0000 00000000 		.space	72
 811      00000000 
 811      00000000 
 811      00000000 
 811      00000000 
 812              		.global	hspi1
 813              		.section	.bss.hspi1,"aw",%nobits
 814              		.align	2
 817              	hspi1:
 818 0000 00000000 		.space	100
 818      00000000 
 818      00000000 
 818      00000000 
 818      00000000 
 819              		.text
 820              	.Letext0:
ARM GAS  /tmp/ccLxna6d.s 			page 27


 821              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 822              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 823              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 824              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 825              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 826              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 827              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 828              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 829              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 830              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 831              		.file 13 "Core/Inc/ws2811.h"
 832              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 833              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 834              		.file 16 "USB_DEVICE/App/usbd_cdc_if.h"
 835              		.file 17 "USB_DEVICE/App/usb_device.h"
 836              		.file 18 "<built-in>"
ARM GAS  /tmp/ccLxna6d.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccLxna6d.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccLxna6d.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccLxna6d.s:116    .text.MX_GPIO_Init:0000005c $d
     /tmp/ccLxna6d.s:122    .text.usb_callback:00000000 $t
     /tmp/ccLxna6d.s:128    .text.usb_callback:00000000 usb_callback
     /tmp/ccLxna6d.s:183    .text.usb_callback:0000001c $d
     /tmp/ccLxna6d.s:803    .data.ack_rsp:00000000 ack_rsp
     /tmp/ccLxna6d.s:188    .text.Error_Handler:00000000 $t
     /tmp/ccLxna6d.s:194    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccLxna6d.s:226    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccLxna6d.s:231    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccLxna6d.s:314    .text.MX_SPI1_Init:00000048 $d
     /tmp/ccLxna6d.s:817    .bss.hspi1:00000000 hspi1
     /tmp/ccLxna6d.s:320    .text.MX_TIM2_Init:00000000 $t
     /tmp/ccLxna6d.s:325    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccLxna6d.s:432    .text.MX_TIM2_Init:0000006c $d
     /tmp/ccLxna6d.s:810    .bss.htim2:00000000 htim2
     /tmp/ccLxna6d.s:439    .text.SystemClock_Config:00000000 $t
     /tmp/ccLxna6d.s:445    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccLxna6d.s:634    .text.SystemClock_Config:000000c8 $d
     /tmp/ccLxna6d.s:640    .rodata.main.str1.4:00000000 $d
     /tmp/ccLxna6d.s:644    .text.main:00000000 $t
     /tmp/ccLxna6d.s:650    .text.main:00000000 main
     /tmp/ccLxna6d.s:786    .text.main:00000084 $d
     /tmp/ccLxna6d.s:797    .bss.buff.0:00000000 buff.0
     /tmp/ccLxna6d.s:794    .bss.buff.0:00000000 $d
     /tmp/ccLxna6d.s:800    .data.ack_rsp:00000000 $d
     /tmp/ccLxna6d.s:807    .bss.htim2:00000000 $d
     /tmp/ccLxna6d.s:814    .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
CDC_Transmit_FS
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCCEx_CRSConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_Base_Start_IT
ws2811_tx
HAL_Delay
